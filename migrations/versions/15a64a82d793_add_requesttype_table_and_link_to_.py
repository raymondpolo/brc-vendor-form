"""Add RequestType table and link to WorkOrder

Revision ID: 15a64a82d793
Revises: 214d808aecea
Create Date: <your_create_date>

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '15a64a82d793'
down_revision = '214d808aecea'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    request_type_table = op.create_table('request_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('work_order', schema=None) as batch_op:
        batch_op.add_column(sa.Column('request_type_id', sa.Integer(), nullable=True))

    # Get existing request types and insert them into the new table
    bind = op.get_bind()
    session = sa.orm.Session(bind=bind)
    work_orders = session.execute(sa.text("SELECT DISTINCT request_type FROM work_order")).fetchall()
    request_types = [{'name': row[0]} for row in work_orders if row[0]]
    if request_types:
        op.bulk_insert(request_type_table, request_types)

    # Update the work_order table with the new foreign key
    session.execute(sa.text("""
        UPDATE work_order
        SET request_type_id = (
            SELECT id FROM request_type WHERE name = work_order.request_type
        )
    """))
    session.commit()

    with op.batch_alter_table('work_order', schema=None) as batch_op:
        batch_op.alter_column('request_type_id', existing_type=sa.INTEGER(), nullable=False)
        batch_op.create_foreign_key('fk_work_order_request_type_id', 'request_type', ['request_type_id'], ['id'])
        batch_op.drop_column('request_type')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('work_order', schema=None) as batch_op:
        batch_op.add_column(sa.Column('request_type', sa.VARCHAR(length=100), nullable=True))

    # Get existing request types and insert them into the new table
    bind = op.get_bind()
    session = sa.orm.Session(bind=bind)
    session.execute(sa.text("""
        UPDATE work_order
        SET request_type = (
            SELECT name FROM request_type WHERE id = work_order.request_type_id
        )
    """))
    session.commit()

    with op.batch_alter_table('work_order', schema=None) as batch_op:
        batch_op.drop_constraint('fk_work_order_request_type_id', type_='foreignkey')
        batch_op.drop_column('request_type_id')

    op.drop_table('request_type')
    # ### end Alembic commands ###